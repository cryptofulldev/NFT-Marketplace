/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NativeMetaTransaction,
  NativeMetaTransactionInterface,
} from "../NativeMetaTransaction";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "domainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "executeMetaTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610799806100206000396000f3fe60806040526004361061003f5760003560e01c80630c53c51c146100445780632d0335ab1461006d5780633408e4701461009a578063f698da25146100af575b600080fd5b6100576100523660046103d7565b6100c4565b60405161006491906105c8565b60405180910390f35b34801561007957600080fd5b5061008d6100883660046103b6565b61024e565b604051610064919061057d565b3480156100a657600080fd5b5061008d610269565b3480156100bb57600080fd5b5061008d61026d565b60408051606081810183526001600160a01b038816600081815260016020908152908590205484528301529181018690526101028782878787610273565b6101275760405162461bcd60e51b815260040161011e906105db565b60405180910390fd5b6001600160a01b03871660009081526001602081905260409091205461014c916106b6565b6001600160a01b0388166000908152600160205260409081902091909155517f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b9061019c90899033908a90610548565b60405180910390a1600080306001600160a01b0316888a6040516020016101c49291906104f6565b60408051601f19818403018152908290526101de916104da565b6000604051808303816000865af19150503d806000811461021b576040519150601f19603f3d011682016040523d82523d6000602084013e610220565b606091505b5091509150816102425760405162461bcd60e51b815260040161011e90610638565b98975050505050505050565b6001600160a01b031660009081526001602052604090205490565b4690565b60005481565b60006001600160a01b03861661029b5760405162461bcd60e51b815260040161011e9061067f565b60016102ae6102a987610319565b610378565b838686604051600081526020016040526040516102ce94939291906105aa565b6020604051602081039080840390855afa1580156102f0573d6000803e3d6000fd5b505050602060405103516001600160a01b0316866001600160a01b031614905095945050505050565b6000604051806080016040528060438152602001610721604391398051602091820120835184830151604080870151805190860120905161035a9501610586565b6040516020818303038152906040528051906020012090505b919050565b600080548260405160200161035a92919061052d565b80356001600160a01b038116811461037357600080fd5b803560ff8116811461037357600080fd5b6000602082840312156103c7578081fd5b6103d08261038e565b9392505050565b600080600080600060a086880312156103ee578081fd5b6103f78661038e565b945060208087013567ffffffffffffffff80821115610414578384fd5b818901915089601f830112610427578384fd5b8135818111156104395761043961070a565b604051601f8201601f191681018501838111828210171561045c5761045c61070a565b60405281815283820185018c1015610472578586fd5b8185850186830137908101909301849052509094505060408601359250606086013591506104a2608087016103a5565b90509295509295909350565b600081518084526104c68160208601602086016106da565b601f01601f19169290920160200192915050565b600082516104ec8184602087016106da565b9190910192915050565b600083516105088184602088016106da565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b61190160f01b81526002810192909252602282015260420190565b60006001600160a01b0380861683528085166020840152506060604083015261057460608301846104ae565b95945050505050565b90815260200190565b93845260208401929092526001600160a01b03166040830152606082015260800190565b93845260ff9290921660208401526040830152606082015260800190565b6000602082526103d060208301846104ae565b6020808252603d908201527f4e4d5423657865637574654d6574615472616e73616374696f6e3a205349474e60408201527f45525f414e445f5349474e41545552455f444f5f4e4f545f4d41544348000000606082015260800190565b60208082526027908201527f4e4d5423657865637574654d6574615472616e73616374696f6e3a2043414c4c60408201526617d1905253115160ca1b606082015260800190565b6020808252601a908201527f4e4d54237665726966793a20494e56414c49445f5349474e4552000000000000604082015260600190565b600082198211156106d557634e487b7160e01b81526011600452602481fd5b500190565b60005b838110156106f55781810151838201526020016106dd565b83811115610704576000848401525b50505050565b634e487b7160e01b600052604160045260246000fdfe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e617475726529a2646970667358221220ecd362292540357d2f164a0473f2fe47b04115ac1bd7c6bb4d4700055bf0540e64736f6c63430008000033";

type NativeMetaTransactionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NativeMetaTransactionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NativeMetaTransaction__factory extends ContractFactory {
  constructor(...args: NativeMetaTransactionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "NativeMetaTransaction";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NativeMetaTransaction> {
    return super.deploy(overrides || {}) as Promise<NativeMetaTransaction>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NativeMetaTransaction {
    return super.attach(address) as NativeMetaTransaction;
  }
  connect(signer: Signer): NativeMetaTransaction__factory {
    return super.connect(signer) as NativeMetaTransaction__factory;
  }
  static readonly contractName: "NativeMetaTransaction";
  public readonly contractName: "NativeMetaTransaction";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NativeMetaTransactionInterface {
    return new utils.Interface(_abi) as NativeMetaTransactionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NativeMetaTransaction {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NativeMetaTransaction;
  }
}
