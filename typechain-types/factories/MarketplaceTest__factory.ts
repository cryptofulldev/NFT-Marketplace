/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MarketplaceTest,
  MarketplaceTestInterface,
} from "../MarketplaceTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_acceptedToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "ownerCutPerMillion",
        type: "uint256",
      },
    ],
    name: "ChangedOwnerCutPerMillion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "publicationFee",
        type: "uint256",
      },
    ],
    name: "ChangedPublicationFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
    ],
    name: "OrderCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "priceInWei",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiresAt",
        type: "uint256",
      },
    ],
    name: "OrderCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalPrice",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "OrderSuccessful",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "ERC721_Interface",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "InterfaceId_ValidateFingerprint",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptedToken",
    outputs: [
      {
        internalType: "contract ERC20Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
    ],
    name: "cancelOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
    ],
    name: "cancelOrderNew",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceInWei",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiresAt",
        type: "uint256",
      },
    ],
    name: "createOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "domainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "executeMetaTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "executeOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "orderByAssetId",
    outputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiresAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerCutPerMillion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicationFeeInWei",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "fingerprint",
        type: "bytes",
      },
    ],
    name: "safeExecuteOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ownerCutPerMillion",
        type: "uint256",
      },
    ],
    name: "setOwnerCutPerMillion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_publicationFee",
        type: "uint256",
      },
    ],
    name: "setPublicationFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002a5f38038062002a5f833981016040819052620000349162000403565b82828260006200004362000192565b600080546001600160a01b0319166001600160a01b03831690811782556040519293509160008051602062002a3f833981519152908290a3506000805460ff60a01b19169055604080518082018252601481527f5465727261447578204d61726b6574706c616365000000000000000000000000602080830191909152825180840190935260018352603160f81b90830152620000e091620001f1565b620000eb8262000268565b6001600160a01b0381166200011d5760405162461bcd60e51b815260040162000114906200046f565b60405180910390fd5b620001288162000315565b62000147836001600160a01b0316620003ce60201b6200093d1760201c565b620001665760405162461bcd60e51b8152600401620001149062000496565b5050600180546001600160a01b0319166001600160a01b039290921691909117905550620005c4915050565b600033301415620001eb57600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b03169150620001ee9050565b50335b90565b6040518060800160405280604f8152602001620029f0604f913980519060200120828051906020012082805190602001203062000233620003d860201b60201c565b6040516200024995949392919060200162000443565b60408051601f1981840301815291905280516020909101206005555050565b6200027262000192565b6001600160a01b031662000285620003dc565b6001600160a01b031614620002ae5760405162461bcd60e51b8152600401620001149062000586565b620f42408110620002d35760405162461bcd60e51b8152600401620001149062000539565b60038190556040517ffa406a120a9e7f2b332bfb7a43d3bf1c3f079262202907a6b69c94b2821a02c6906200030a908390620005bb565b60405180910390a150565b6200031f62000192565b6001600160a01b031662000332620003dc565b6001600160a01b0316146200035b5760405162461bcd60e51b8152600401620001149062000586565b6001600160a01b038116620003845760405162461bcd60e51b81526004016200011490620004f3565b600080546040516001600160a01b038085169392169160008051602062002a3f83398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b803b15155b919050565b4690565b6000546001600160a01b031690565b80516001600160a01b0381168114620003d357600080fd5b60008060006060848603121562000418578283fd5b6200042384620003eb565b9250602084015191506200043a60408501620003eb565b90509250925092565b948552602085019390935260408401919091526001600160a01b03166060830152608082015260a00190565b6020808252600d908201526c24b73b30b634b21037bbb732b960991b604082015260600190565b60208082526036908201527f54686520616363657074656420746f6b656e2061646472657373206d7573742060408201527f62652061206465706c6f79656420636f6e747261637400000000000000000000606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252602d908201527f546865206f776e6572206375742073686f756c64206265206265747765656e2060408201526c3020616e64203939392c39393960981b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b61241c80620005d46000396000f3fe60806040526004361061013a5760003560e01c80636f652e1a116100bb578063ae4f11981161007f578063e61f385111610059578063e61f38511461033b578063f2fde38b1461036c578063f698da251461038c5761013a565b8063ae4f1198146102e6578063ae7b0333146102fb578063af8996f11461031b5761013a565b80636f652e1a14610267578063715018a6146102875780638da5cb5b1461029c5780639b214f77146102b1578063a01f79d4146102d15761013a565b80633408e470116101025780633408e470146101f957806337f82f371461020e578063451c3d80146102235780635c975abb146102455780636a2061371461018a5761013a565b80630c53c51c1461013f57806319dad16d146101685780632aa765c51461018a5780632b4c32be146101aa5780632d0335ab146101cc575b600080fd5b61015261014d366004611831565b6103a1565b60405161015f9190611c43565b60405180910390f35b34801561017457600080fd5b506101886101833660046119c6565b61052a565b005b34801561019657600080fd5b506101886101a53660046118ac565b6105cb565b3480156101b657600080fd5b506101bf6105ff565b60405161015f9190611c16565b3480156101d857600080fd5b506101ec6101e73660046117f2565b61060a565b60405161015f9190611b42565b34801561020557600080fd5b506101ec610625565b34801561021a57600080fd5b506101bf61062a565b34801561022f57600080fd5b5061023861064e565b60405161015f9190611ab0565b34801561025157600080fd5b5061025a61065d565b60405161015f9190611b37565b34801561027357600080fd5b5061018861028236600461196c565b61066d565b34801561029357600080fd5b506101886106a4565b3480156102a857600080fd5b5061023861072d565b3480156102bd57600080fd5b506101886102cc36600461190b565b61073c565b3480156102dd57600080fd5b506101ec610774565b3480156102f257600080fd5b506101ec61077a565b34801561030757600080fd5b506101886103163660046118d7565b610780565b34801561032757600080fd5b506101886103363660046119c6565b6107c0565b34801561034757600080fd5b5061035b6103563660046118ac565b610834565b60405161015f959493929190611b62565b34801561037857600080fd5b506101886103873660046117f2565b610877565b34801561039857600080fd5b506101ec610937565b60408051606081810183526001600160a01b038816600081815260066020908152908590205484528301529181018690526103df8782878787610943565b6104045760405162461bcd60e51b81526004016103fb90611e7e565b60405180910390fd5b6001600160a01b0387166000908152600660205260409020546104289060016122c5565b6001600160a01b0388166000908152600660205260409081902091909155517f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b9061047890899033908a90611ade565b60405180910390a1600080306001600160a01b0316888a6040516020016104a0929190611a26565b60408051601f19818403018152908290526104ba91611a0a565b6000604051808303816000865af19150503d80600081146104f7576040519150601f19603f3d011682016040523d82523d6000602084013e6104fc565b606091505b50915091508161051e5760405162461bcd60e51b81526004016103fb90612033565b98975050505050505050565b6105326109e9565b6001600160a01b031661054361072d565b6001600160a01b0316146105695760405162461bcd60e51b81526004016103fb9061207a565b620f4240811061058b5760405162461bcd60e51b81526004016103fb90611fe6565b60038190556040517ffa406a120a9e7f2b332bfb7a43d3bf1c3f079262202907a6b69c94b2821a02c6906105c0908390611b42565b60405180910390a150565b6105d361065d565b156105f05760405162461bcd60e51b81526004016103fb90611f10565b6105fa8282610a45565b505050565b6380ac58cd60e01b81565b6001600160a01b031660009081526006602052604090205490565b465b90565b7f8f9f4b63fb27ea36c52c6e650320201c8f2c6d7c1dfa95f40f5d5da52392016881565b6001546001600160a01b031681565b600054600160a01b900460ff1690565b61067561065d565b156106925760405162461bcd60e51b81526004016103fb90611f10565b61069e84848484610be3565b50505050565b6106ac6109e9565b6001600160a01b03166106bd61072d565b6001600160a01b0316146106e35760405162461bcd60e51b81526004016103fb9061207a565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b61074461065d565b156107615760405162461bcd60e51b81526004016103fb90611f10565b61076d84848484611041565b5050505050565b60035481565b60045481565b61078861065d565b156107a55760405162461bcd60e51b81526004016103fb90611f10565b61069e83838360405180602001604052806000815250611041565b6107c86109e9565b6001600160a01b03166107d961072d565b6001600160a01b0316146107ff5760405162461bcd60e51b81526004016103fb9061207a565b60048190556040517fe7fa8737293f41b5dfa0d5c3e552860a06275bed7015581b083c7be7003308ba906105c0908390611b42565b600260208181526000938452604080852090915291835291208054600182015492820154600383015460049093015491936001600160a01b039081169391169185565b61087f6109e9565b6001600160a01b031661089061072d565b6001600160a01b0316146108b65760405162461bcd60e51b81526004016103fb9061207a565b6001600160a01b0381166108dc5760405162461bcd60e51b81526004016103fb90611cea565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60055481565b3b151590565b60006001600160a01b03861661096b5760405162461bcd60e51b81526004016103fb90612161565b600161097e610979876115fb565b611659565b8386866040516000815260200160405260405161099e9493929190611bf8565b6020604051602081039080840390855afa1580156109c0573d6000803e3d6000fd5b505050602060405103516001600160a01b0316866001600160a01b031614905095945050505050565b600033301415610a4057600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b031691506106279050565b503390565b610a4d611743565b6000610a576109e9565b6001600160a01b038086166000908152600260208181526040808420898552825292839020835160a08101855281548082526001830154871693820193909352928101549094169282019290925260038301546060820152600490920154608083015291925090610ada5760405162461bcd60e51b81526004016103fb906120af565b816001600160a01b031681602001516001600160a01b03161480610b165750610b0161072d565b6001600160a01b0316826001600160a01b0316145b610b325760405162461bcd60e51b81526004016103fb90611d8d565b80516020808301516040808501516001600160a01b03808b16600090815260028087528482208c83529096528381208181556001810180546001600160a01b03199081169091559681018054909716909655600386018190556004909501949094559051919290919083169088907f0325426328de5b91ae4ad8462ad4076de4bcaf4551e81556185cacde5a425c6b90610bcf9087908690611b4b565b60405180910390a350919695505050505050565b610bec84611670565b6000610bf66109e9565b6040516331a9108f60e11b815290915085906000906001600160a01b03831690636352211e90610c2a908990600401611b42565b60206040518083038186803b158015610c4257600080fd5b505afa158015610c56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7a9190611815565b9050806001600160a01b0316836001600160a01b031614610cad5760405162461bcd60e51b81526004016103fb90611edb565b60405163020604bf60e21b815230906001600160a01b0384169063081812fc90610cdb908a90600401611b42565b60206040518083038186803b158015610cf357600080fd5b505afa158015610d07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2b9190611815565b6001600160a01b03161480610db9575060405163e985e9c560e01b81526001600160a01b0383169063e985e9c590610d699084903090600401611ac4565b60206040518083038186803b158015610d8157600080fd5b505afa158015610d95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db991906119a6565b610dd55760405162461bcd60e51b81526004016103fb90611f47565b60008511610df55760405162461bcd60e51b81526004016103fb9061222c565b610e0042603c6122c5565b8411610e1e5760405162461bcd60e51b81526004016103fb90611d30565b60004282888a89604051602001610e39959493929190611a78565b6040516020818303038152906040528051906020012090506040518060a00160405280828152602001836001600160a01b03168152602001896001600160a01b0316815260200187815260200186815250600260008a6001600160a01b03166001600160a01b0316815260200190815260200160002060008981526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606082015181600301556080820151816004015590505060006004541115610fef576001546001600160a01b03166323b872dd85610f6061072d565b6004546040518463ffffffff1660e01b8152600401610f8193929190611b13565b602060405180830381600087803b158015610f9b57600080fd5b505af1158015610faf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd391906119a6565b610fef5760405162461bcd60e51b81526004016103fb90611dc4565b816001600160a01b0316877f84c66c3f7ba4b390e20e8e8233e2a516f3ce34a72749e4f12bd010dfba238039838b8a8a60405161102f9493929190611bb0565b60405180910390a35050505050505050565b611049611743565b61105285611670565b600061105c6109e9565b6040516301ffc9a760e01b815290915086906001600160a01b038216906301ffc9a7906110ad907f8f9f4b63fb27ea36c52c6e650320201c8f2c6d7c1dfa95f40f5d5da52392016890600401611c16565b60206040518083038186803b1580156110c557600080fd5b505afa1580156110d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fd91906119a6565b1561119c57604051638f9f4b6360e01b81526001600160a01b03821690638f9f4b639061113090899088906004016122a4565b60206040518083038186803b15801561114857600080fd5b505afa15801561115c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118091906119a6565b61119c5760405162461bcd60e51b81526004016103fb90611fa4565b6001600160a01b0380881660009081526002602081815260408084208b8552825292839020835160a08101855281548082526001830154871693820193909352928101549094169282019290925260038301546060820152600490920154608083015261121b5760405162461bcd60e51b81526004016103fb906120af565b60208101516001600160a01b0381166112465760405162461bcd60e51b81526004016103fb90611cb3565b836001600160a01b0316816001600160a01b031614156112785760405162461bcd60e51b81526004016103fb90611d8d565b8682606001511461129b5760405162461bcd60e51b81526004016103fb906121f5565b816080015142106112be5760405162461bcd60e51b81526004016103fb9061212a565b6040516331a9108f60e11b81526001600160a01b03841690636352211e906112ea908b90600401611b42565b60206040518083038186803b15801561130257600080fd5b505afa158015611316573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133a9190611815565b6001600160a01b0316816001600160a01b03161461136a5760405162461bcd60e51b81526004016103fb90612263565b81516001600160a01b038a1660009081526002602081815260408084208d855290915282208281556001810180546001600160a01b0319908116909155918101805490921690915560038082018390556004909101829055549091901561149157620f42406003548a6113dd91906122fd565b6113e791906122dd565b6001549092506001600160a01b03166323b872dd8761140461072d565b856040518463ffffffff1660e01b815260040161142393929190611b13565b602060405180830381600087803b15801561143d57600080fd5b505af1158015611451573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147591906119a6565b6114915760405162461bcd60e51b81526004016103fb90611c56565b6001546001600160a01b03166323b872dd87856114ae868e61231c565b6040518463ffffffff1660e01b81526004016114cc93929190611b13565b602060405180830381600087803b1580156114e657600080fd5b505af11580156114fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151e91906119a6565b61153a5760405162461bcd60e51b81526004016103fb90612198565b604051632142170760e11b81526001600160a01b038616906342842e0e9061156a9086908a908f90600401611b13565b600060405180830381600087803b15801561158457600080fd5b505af1158015611598573d6000803e3d6000fd5b50505050856001600160a01b0316836001600160a01b03168b7f695ec315e8a642a74d450a4505eeea53df699b47a7378c7d752e97d5b16eb9bb848f8e6040516115e493929190611b91565b60405180910390a450919998505050505050505050565b60006040518060800160405280604381526020016123a4604391398051602091820120835184830151604080870151805190860120905161163c9501611bd4565b604051602081830303815290604052805190602001209050919050565b60006005548260405160200161163c929190611a5d565b611682816001600160a01b031661093d565b61169e5760405162461bcd60e51b81526004016103fb906120e6565b6040516301ffc9a760e01b815281906001600160a01b038216906301ffc9a7906116d3906380ac58cd60e01b90600401611c16565b60206040518083038186803b1580156116eb57600080fd5b505afa1580156116ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061172391906119a6565b61173f5760405162461bcd60e51b81526004016103fb90611e21565b5050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b600082601f830112611781578081fd5b813567ffffffffffffffff8082111561179c5761179c612375565b604051601f8301601f1916810160200182811182821017156117c0576117c0612375565b6040528281528483016020018610156117d7578384fd5b82602086016020830137918201602001929092529392505050565b600060208284031215611803578081fd5b813561180e8161238b565b9392505050565b600060208284031215611826578081fd5b815161180e8161238b565b600080600080600060a08688031215611848578081fd5b85356118538161238b565b9450602086013567ffffffffffffffff81111561186e578182fd5b61187a88828901611771565b9450506040860135925060608601359150608086013560ff8116811461189e578182fd5b809150509295509295909350565b600080604083850312156118be578182fd5b82356118c98161238b565b946020939093013593505050565b6000806000606084860312156118eb578283fd5b83356118f68161238b565b95602085013595506040909401359392505050565b60008060008060808587031215611920578384fd5b843561192b8161238b565b93506020850135925060408501359150606085013567ffffffffffffffff811115611954578182fd5b61196087828801611771565b91505092959194509250565b60008060008060808587031215611981578384fd5b843561198c8161238b565b966020860135965060408601359560600135945092505050565b6000602082840312156119b7578081fd5b8151801515811461180e578182fd5b6000602082840312156119d7578081fd5b5035919050565b600081518084526119f6816020860160208601612333565b601f01601f19169290920160200192915050565b60008251611a1c818460208701612333565b9190910192915050565b60008351611a38818460208801612333565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b61190160f01b81526002810192909252602282015260420190565b9485526bffffffffffffffffffffffff19606094851b811660208701526034860193909352921b166054830152606882015260880190565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b60006001600160a01b03808616835280851660208401525060606040830152611b0a60608301846119de565b95945050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b901515815260200190565b90815260200190565b9182526001600160a01b0316602082015260400190565b9485526001600160a01b0393841660208601529190921660408401526060830191909152608082015260a00190565b9283526001600160a01b03919091166020830152604082015260600190565b9384526001600160a01b039290921660208401526040830152606082015260800190565b93845260208401929092526001600160a01b03166040830152606082015260800190565b93845260ff9290921660208401526040830152606082015260800190565b7fffffffff0000000000000000000000000000000000000000000000000000000091909116815260200190565b60006020825261180e60208301846119de565b60208082526033908201527f5472616e73666572696e67207468652063757420746f20746865204d61726b6560408201527f74706c616365206f776e6572206661696c656400000000000000000000000000606082015260800190565b6020808252600f908201527f496e76616c696420616464726573730000000000000000000000000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526036908201527f5075626c69636174696f6e2073686f756c64206265206d6f7265207468616e2060408201527f31206d696e75746520696e207468652066757475726500000000000000000000606082015260800190565b60208082526011908201527f556e617574686f72697a65642075736572000000000000000000000000000000604082015260600190565b6020808252603f908201527f5472616e73666572696e6720746865207075626c69636174696f6e206665652060408201527f746f20746865204d61726b6574706c616365206f776e6572206661696c656400606082015260800190565b60208082526035908201527f546865204e465420636f6e74726163742068617320616e20696e76616c69642060408201527f45524337323120696d706c656d656e746174696f6e0000000000000000000000606082015260800190565b6020808252603d908201527f4e4d5423657865637574654d6574615472616e73616374696f6e3a205349474e60408201527f45525f414e445f5349474e41545552455f444f5f4e4f545f4d41544348000000606082015260800190565b6020808252818101527f4f6e6c7920746865206f776e65722063616e20637265617465206f7264657273604082015260600190565b60208082526010908201527f5061757361626c653a2070617573656400000000000000000000000000000000604082015260600190565b60208082526032908201527f54686520636f6e7472616374206973206e6f7420617574686f72697a6564207460408201527f6f206d616e616765207468652061737365740000000000000000000000000000606082015260800190565b60208082526022908201527f5468652061737365742066696e6765727072696e74206973206e6f742076616c6040820152611a5960f21b606082015260800190565b6020808252602d908201527f546865206f776e6572206375742073686f756c64206265206265747765656e2060408201526c3020616e64203939392c39393960981b606082015260800190565b60208082526027908201527f4e4d5423657865637574654d6574615472616e73616374696f6e3a2043414c4c60408201526617d1905253115160ca1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526013908201527f4173736574206e6f74207075626c697368656400000000000000000000000000604082015260600190565b60208082526024908201527f546865204e465420416464726573732073686f756c64206265206120636f6e746040820152631c9858dd60e21b606082015260800190565b60208082526011908201527f546865206f726465722065787069726564000000000000000000000000000000604082015260600190565b6020808252601a908201527f4e4d54237665726966793a20494e56414c49445f5349474e4552000000000000604082015260600190565b60208082526030908201527f5472616e73666572696e67207468652073616c6520616d6f756e7420746f207460408201527f68652073656c6c6572206661696c656400000000000000000000000000000000606082015260800190565b60208082526018908201527f546865207072696365206973206e6f7420636f72726563740000000000000000604082015260600190565b6020808252601d908201527f50726963652073686f756c6420626520626967676572207468616e2030000000604082015260600190565b60208082526021908201527f5468652073656c6c6572206973206e6f206c6f6e67657220746865206f776e656040820152603960f91b606082015260800190565b6000838252604060208301526122bd60408301846119de565b949350505050565b600082198211156122d8576122d861235f565b500190565b6000826122f857634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156123175761231761235f565b500290565b60008282101561232e5761232e61235f565b500390565b60005b8381101561234e578181015183820152602001612336565b8381111561069e5750506000910152565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146123a057600080fd5b5056fe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e617475726529a2646970667358221220b94472c9c231ba447341a97e16c18b600af497f29b4fda10e0929b977c98dbf164736f6c63430008000033454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c6164647265737320766572696679696e67436f6e74726163742c627974657333322073616c74298be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0";

type MarketplaceTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketplaceTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarketplaceTest__factory extends ContractFactory {
  constructor(...args: MarketplaceTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MarketplaceTest";
  }

  deploy(
    _acceptedToken: string,
    _fee: BigNumberish,
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MarketplaceTest> {
    return super.deploy(
      _acceptedToken,
      _fee,
      _owner,
      overrides || {}
    ) as Promise<MarketplaceTest>;
  }
  getDeployTransaction(
    _acceptedToken: string,
    _fee: BigNumberish,
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _acceptedToken,
      _fee,
      _owner,
      overrides || {}
    );
  }
  attach(address: string): MarketplaceTest {
    return super.attach(address) as MarketplaceTest;
  }
  connect(signer: Signer): MarketplaceTest__factory {
    return super.connect(signer) as MarketplaceTest__factory;
  }
  static readonly contractName: "MarketplaceTest";
  public readonly contractName: "MarketplaceTest";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketplaceTestInterface {
    return new utils.Interface(_abi) as MarketplaceTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarketplaceTest {
    return new Contract(address, _abi, signerOrProvider) as MarketplaceTest;
  }
}
