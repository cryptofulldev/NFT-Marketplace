/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MarketplaceStorage,
  MarketplaceStorageInterface,
} from "../MarketplaceStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "ownerCutPerMillion",
        type: "uint256",
      },
    ],
    name: "ChangedOwnerCutPerMillion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "publicationFee",
        type: "uint256",
      },
    ],
    name: "ChangedPublicationFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
    ],
    name: "OrderCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "priceInWei",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiresAt",
        type: "uint256",
      },
    ],
    name: "OrderCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalPrice",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "OrderSuccessful",
    type: "event",
  },
  {
    inputs: [],
    name: "ERC721_Interface",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "InterfaceId_ValidateFingerprint",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptedToken",
    outputs: [
      {
        internalType: "contract ERC20Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "orderByAssetId",
    outputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiresAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerCutPerMillion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicationFeeInWei",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610265806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063a01f79d411610050578063a01f79d4146100b2578063ae4f1198146100c7578063e61f3851146100cf57610072565b80632b4c32be1461007757806337f82f3714610095578063451c3d801461009d575b600080fd5b61007f6100f3565b60405161008c91906101e5565b60405180910390f35b61007f6100fe565b6100a5610122565b60405161008c9190610212565b6100ba610131565b60405161008c9190610226565b6100ba610137565b6100e26100dd366004610180565b61013d565b60405161008c9594939291906101b6565b6380ac58cd60e01b81565b7f8f9f4b63fb27ea36c52c6e650320201c8f2c6d7c1dfa95f40f5d5da52392016881565b6000546001600160a01b031681565b60025481565b60035481565b60016020818152600093845260408085209091529183529120805491810154600282015460038301546004909301546001600160a01b0392831693919092169185565b60008060408385031215610192578182fd5b82356001600160a01b03811681146101a8578283fd5b946020939093013593505050565b9485526001600160a01b0393841660208601529190921660408401526060830191909152608082015260a00190565b7fffffffff0000000000000000000000000000000000000000000000000000000091909116815260200190565b6001600160a01b0391909116815260200190565b9081526020019056fea2646970667358221220ffac49c768f48177e4215782dcf8ac9fcf8cfb720220bebf04d071b0db6f8de164736f6c63430008000033";

type MarketplaceStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketplaceStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarketplaceStorage__factory extends ContractFactory {
  constructor(...args: MarketplaceStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MarketplaceStorage";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MarketplaceStorage> {
    return super.deploy(overrides || {}) as Promise<MarketplaceStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MarketplaceStorage {
    return super.attach(address) as MarketplaceStorage;
  }
  connect(signer: Signer): MarketplaceStorage__factory {
    return super.connect(signer) as MarketplaceStorage__factory;
  }
  static readonly contractName: "MarketplaceStorage";
  public readonly contractName: "MarketplaceStorage";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketplaceStorageInterface {
    return new utils.Interface(_abi) as MarketplaceStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarketplaceStorage {
    return new Contract(address, _abi, signerOrProvider) as MarketplaceStorage;
  }
}
