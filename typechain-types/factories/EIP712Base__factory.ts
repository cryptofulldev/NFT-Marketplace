/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EIP712Base, EIP712BaseInterface } from "../EIP712Base";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161028738038061028783398101604081905261002f91610149565b6040518060800160405280604f8152602001610238604f913980519060200120828051906020012082805190602001203061006e6100a560201b60201c565b6040516100829594939291906020016101a9565b6040516020818303038152906040528051906020012060008190555050506101eb565b4690565b600082601f8301126100b9578081fd5b81516001600160401b03808211156100d3576100d36101d5565b6040516020601f8401601f19168201810183811183821017156100f8576100f86101d5565b604052838252858401810187101561010e578485fd5b8492505b8383101561012f5785830181015182840182015291820191610112565b8383111561013f57848185840101525b5095945050505050565b6000806040838503121561015b578182fd5b82516001600160401b0380821115610171578384fd5b61017d868387016100a9565b93506020850151915080821115610192578283fd5b5061019f858286016100a9565b9150509250929050565b948552602085019390935260408401919091526001600160a01b03166060830152608082015260a00190565b634e487b7160e01b600052604160045260246000fd5b603f806101f96000396000f3fe6080604052600080fdfea2646970667358221220fd5be7695cca127dfe81cac1082dbe6a64d37b21f682ea97efb3eedf0889c8df64736f6c63430008000033454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c6164647265737320766572696679696e67436f6e74726163742c627974657333322073616c7429";

type EIP712BaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EIP712BaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EIP712Base__factory extends ContractFactory {
  constructor(...args: EIP712BaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "EIP712Base";
  }

  deploy(
    name: string,
    version: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EIP712Base> {
    return super.deploy(name, version, overrides || {}) as Promise<EIP712Base>;
  }
  getDeployTransaction(
    name: string,
    version: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, version, overrides || {});
  }
  attach(address: string): EIP712Base {
    return super.attach(address) as EIP712Base;
  }
  connect(signer: Signer): EIP712Base__factory {
    return super.connect(signer) as EIP712Base__factory;
  }
  static readonly contractName: "EIP712Base";
  public readonly contractName: "EIP712Base";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EIP712BaseInterface {
    return new utils.Interface(_abi) as EIP712BaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EIP712Base {
    return new Contract(address, _abi, signerOrProvider) as EIP712Base;
  }
}
